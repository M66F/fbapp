#!/usr/bin/env node
var app = require('../app');
var history = [];

// port 80 benoetigt sudo
app.set('port', 80 || process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  console.log('Express server listening on port ' + server.address().port);
});



// here begins the WebSocketServer - Magic
var io = require('socket.io').listen(server);
io.sockets.on('connection', function (socket) {
  var authorized = false;
  var nameOnServer = "unknown";
  var clientIp = socket.request.connection.remoteAddress;
  console.log(new Date() + " received request from " + clientIp);

  socket.emit('authorization', {});

  socket.on('authorization', function(data) {
    if(data.key == "123456abc") {
      authorized = true;
      // client connected, fire init event
      socket.emit('init', { time: new Date().toLocaleTimeString(), text: 'Du bist nun mit dem Server verbunden!' });
      if(history[0] != undefined && history[0] != null) {
        for(chatline in history) {
          json = JSON.parse(history[chatline]);
          socket.emit('chat', {time: json.time, name: json.name, text: json.text});
        }
      }

      console.log(new Date() + " successful login from " + clientIp);
    } else {
      socket.emit('alert', {message:"Authorization failed"});
      console.log(new Date() + " failed login from " + clientIp);
    }
  });


  // user sends chat message
  socket.on('chat', function (data) {
    if(authorized == true) {
      if(nameOnServer == "unknown") {
        nameOnServer = data.name;
      } else if (nameOnServer != data.name) {
        console.log("Disallowed name change attempt from " + clientIp);
        socket.emit('alert', {message:"You have been kicked! Reason: Disallowed action"});
        socket.disconnect();
        return;
      }
        // send to all users
        data.text = data.text.replace(/</g, "&lt;").replace(/>/g, "&gt;");
        data.time = data.time.replace(/</g, "&lt;").replace(/>/g, "&gt;");
        data.name = data.name.replace(/</g, "&lt;").replace(/>/g, "&gt;");
        io.sockets.emit('chat', {time: data.time, name: data.name || 'Anonym', text: data.text});
        history.push(JSON.stringify({"time": data.time, "name": data.name, "text": data.text}));

    }
  });
});